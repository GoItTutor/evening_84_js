/*
  1. –ë–ª–æ–≥–µ—Ä

  –ü–æ–Ω—è—Ç—Ç—è –∫–ª–∞—Å —Ç–∞ –µ–∫–∑–µ–º–ø–ª—è—Ä, –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è, –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è

  –ü—Ä–æ—Ç–æ—Ç–∏–ø–Ω–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –≤ —ñ–Ω—Å—Ç–∞–Ω—Å—ñ–≤ –∫–ª–∞—Å—É

  –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ 
  –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:

  email - –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
  age - –≤—ñ–∫, —á–∏—Å–ª–æ
  numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
  topics - –º–∞—Å–∏–≤ —Ç–µ–º, –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä

  –ö–ª–∞—Å –æ—á—ñ–∫—É—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä ‚Äì –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ 
  –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.

  –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: 
  User ${–ø–æ—à—Ç–∞} is ${–≤—ñ–∫} years old and has ${—É –ø–æ—Å—Ç—ñ–≤} posts

  –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value 
  –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
*/

// class Blogger {
//   constructor({ email, age, numberOfPosts, topics }) {
//     this.email = email;
//     this.age = age;
//     this.numberOfPosts = numberOfPosts;
//     this.topics = topics;
//   }

//   getInfo() {
//     return `User ${this.email} is ${this.age} years old and has ${this.numberOfPosts} posts`;
//   }

//   updatePostCount(value) {
//     this.numberOfPosts += +value;
//   }
// }

// 1
// const mango = new Blogger({
//   email: "mango@mail.com",
//   age: 24,
//   numberOfPosts: 20,
//   topics: ["tech", "cooking"],
// });

// console.log(mango);

// 2
// const poly = new Blogger({
//   email: "poly@mail.com",
//   age: 19,
//   numberOfPosts: 17,
//   topics: ["sports", "gaming", "health"],
// });

// console.log(poly);

// console.log(poly.getInfo());

// poly.updatePostCount(4);

// console.log(poly.getInfo());

/*
  2. –°—Ö–æ–≤–∏—â–µ
 
  –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤. –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤, —ñ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items

  –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:

  getItems() ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤

  addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —Ç–∞ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö
*/

// const initialItems = ["HTML", "JS", "CSS"];

// class Storage {
//   constructor(items) {
//     this.items = [...items];
//   }

//   getItems() {
//     return this.items;
//   }

//   addItems(...newItems) {
//     this.items.push(...newItems);
//   }
// }

// const coursesStorage = new Storage(initialItems);
// console.log(coursesStorage);

// console.table(coursesStorage.getItems());

// coursesStorage.addItems("üçå", "TS", "Gaming mouse");
// console.log(coursesStorage.getItems());

/*
  3. User

  –ü—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
  
  –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email
  
  –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä login —Ç–∞ email
*/

// class User {
//   #login;
//   #email;

//   constructor({ email, login }) {
//     this.#email = email;
//     this.#login = login;
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(newLogin) {
//     this.#login = newLogin;
//   }

//   get email() {
//     return this.#email;
//   }

//   set email(newEmail) {
//     this.#email = newEmail;
//   }
// }

// const mango = new User({
//   login: "Mango",
//   email: "mango@dog.woof",
// });

// console.log(mango.email);
// console.log(mango.login);

/*
  4. –ù–æ—Ç–∞—Ç–∫–∏

  –°—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ

  –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes, —è–∫–∏–π —É–ø—Ä–∞–≤–ª—è—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items. –ù–æ—Ç–∞—Ç–∫–∞ —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —Ç–∞ priority. –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å Priority, —É —è–∫—ñ–π –∑–±–µ—Ä—ñ–≥–∞—Ç–∏–º–µ—Ç—å—Å—è –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.

  {
    LOW: 'low',
    NORMAL: 'normal',
    HIGH: 'high'
  }
  
  –î–æ–¥–∞–π –º–µ—Ç–æ–¥ addNote(note) –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ—Ç–∞—Ç–∫–∏
*/

// class Notes {
//   static Priority = {
//     LOW: "low",
//     NORMAL: "normal",
//     HIGH: "high",
//   };

//   constructor(items) {
//     this.items = items;
//   }

//   addNote(note) {
//     this.items.push(note);
//   }
// }

// const myNotes = new Notes([]);

// myNotes.addNote({
//   text: "–ú–æ—è –ø–µ—Ä—à–∞ –Ω–æ—Ç–∞—Ç–∫–∞",
//   priority: Notes.Priority.LOW,
// });

// myNotes.addNote({
//   text: "–ú–æ—è –¥—Ä—É–≥–∞ –Ω–æ—Ç–∞—Ç–∫–∞",
//   priority: Notes.Priority.HIGH,
// });

// console.log(myNotes);

// const array = [];

// console.dir(Array.isArray([]));

/*
  5. –ü—Ä–æ—Ç–æ—Ç–∏–ø–Ω–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω—ñ—à–µ

  –ú–µ—Ç–æ–¥ Object.create

  –í–ª–∞—Å–Ω—ñ/–Ω–µ–≤–ª–∞—Å–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ, –ø–µ—Ä–µ–±—ñ—Ä —Ü–∏–∫–ª–æ–º for in
  —Ç–∞ –º–µ—Ç–æ–¥ hasOwnProperty
*/

// const obj1 = {
//   a: 1,
//   b: 2,
// };

// const obj2 = Object.create(obj1);

// obj2.c = 3;

// console.log(obj2);

// for (let key in obj2) {
//   console.log(key, obj2.hasOwnProperty(key));
// }

// console.log(Object.keys(obj2));

// console.log(obj2);
// console.log(obj2.a)

// const string = new String("string");

// console.log(string.toString());

// const number = new Number(1212);

// console.log(number);
// console.log(number.toString());

// const userOleg = {
//   c: 3,
// };

// const userVitaliy = Object.create(userOleg);

// userVitaliy.b = 2;

// const userAnna = Object.create(userVitaliy);

// userAnna.a = 1;

// console.log(userAnna);

// class Storage {
//   constructor(items) {
//     Storage.prototype.items = [...items];
//   }
// }

// const storage = new Storage([]);

// console.log(storage);

// const idx = 0;

// console.log(!!~idx);
